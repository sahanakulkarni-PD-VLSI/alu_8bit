$date
	Wed May  7 20:48:56 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_8bit_tb $end
$var wire 8 ! result [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % cin $end
$var reg 3 & op [2:0] $end
$scope module dut $end
$var wire 8 ' a [7:0] $end
$var wire 8 ( b [7:0] $end
$var wire 1 % cin $end
$var wire 3 ) op [2:0] $end
$var wire 8 * result [7:0] $end
$var wire 1 " cout $end
$var wire 8 + carry [7:0] $end
$scope module alu0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % cin $end
$var wire 3 . op [2:0] $end
$var reg 1 / cout $end
$var reg 1 0 result $end
$upscope $end
$scope module alu1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 3 4 op [2:0] $end
$var reg 1 5 cout $end
$var reg 1 6 result $end
$upscope $end
$scope module alu2 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 3 : op [2:0] $end
$var reg 1 ; cout $end
$var reg 1 < result $end
$upscope $end
$scope module alu3 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? cin $end
$var wire 3 @ op [2:0] $end
$var reg 1 A cout $end
$var reg 1 B result $end
$upscope $end
$scope module alu4 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 E cin $end
$var wire 3 F op [2:0] $end
$var reg 1 G cout $end
$var reg 1 H result $end
$upscope $end
$scope module alu5 $end
$var wire 1 I a $end
$var wire 1 J b $end
$var wire 1 K cin $end
$var wire 3 L op [2:0] $end
$var reg 1 M cout $end
$var reg 1 N result $end
$upscope $end
$scope module alu6 $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 Q cin $end
$var wire 3 R op [2:0] $end
$var reg 1 S cout $end
$var reg 1 T result $end
$upscope $end
$scope module alu7 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 W cin $end
$var wire 3 X op [2:0] $end
$var reg 1 " cout $end
$var reg 1 Y result $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0Y
b0 X
0W
0V
0U
0T
0S
b0 R
0Q
0P
0O
0N
0M
b0 L
0K
0J
0I
0H
0G
b0 F
0E
0D
0C
1B
0A
b0 @
0?
0>
1=
1<
0;
b0 :
09
18
07
16
05
b0 4
03
02
11
10
0/
b0 .
1-
0,
bz0000000 +
b1111 *
b0 )
b101 (
b1010 '
b0 &
0%
b101 $
b1010 #
0"
b1111 !
$end
#10
06
b101 !
b101 *
0B
13
1?
1/
bz0000101 +
1;
b1 &
b1 )
b1 .
b1 4
b1 :
b1 @
b1 F
b1 L
b1 R
b1 X
#20
03
0?
0/
00
bz0000000 +
0;
b0 !
b0 *
0<
b10 &
b10 )
b10 .
b10 4
b10 :
b10 @
b10 F
b10 L
b10 R
b10 X
#30
10
16
1<
b1111 !
b1111 *
1B
b11 &
b11 )
b11 .
b11 4
b11 :
b11 @
b11 F
b11 L
b11 R
b11 X
#40
b100 &
b100 )
b100 .
b100 4
b100 :
b100 @
b100 F
b100 L
b100 R
b100 X
#60
